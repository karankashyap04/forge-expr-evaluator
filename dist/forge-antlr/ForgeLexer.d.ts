import { ATN } from "antlr4ts/atn/ATN";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { Vocabulary } from "antlr4ts/Vocabulary";
export declare class ForgeLexer extends Lexer {
    static readonly OPEN_TOK = 1;
    static readonly LEFT_SQUARE_TOK = 2;
    static readonly RIGHT_SQUARE_TOK = 3;
    static readonly AS_TOK = 4;
    static readonly FILE_PATH_TOK = 5;
    static readonly VAR_TOK = 6;
    static readonly ABSTRACT_TOK = 7;
    static readonly SIG_TOK = 8;
    static readonly LEFT_CURLY_TOK = 9;
    static readonly RIGHT_CURLY_TOK = 10;
    static readonly EXTENDS_TOK = 11;
    static readonly IN_TOK = 12;
    static readonly PLUS_TOK = 13;
    static readonly LONE_TOK = 14;
    static readonly SOME_TOK = 15;
    static readonly ONE_TOK = 16;
    static readonly TWO_TOK = 17;
    static readonly SET_TOK = 18;
    static readonly FUNC_TOK = 19;
    static readonly PFUNC_TOK = 20;
    static readonly DISJ_TOK = 21;
    static readonly COLON_TOK = 22;
    static readonly WHEAT_TOK = 23;
    static readonly PRED_TOK = 24;
    static readonly DOT_TOK = 25;
    static readonly FUN_TOK = 26;
    static readonly LEFT_PAREN_TOK = 27;
    static readonly RIGHT_PAREN_TOK = 28;
    static readonly ASSERT_TOK = 29;
    static readonly RUN_TOK = 30;
    static readonly CHECK_TOK = 31;
    static readonly FOR_TOK = 32;
    static readonly BUT_TOK = 33;
    static readonly EXACTLY_TOK = 34;
    static readonly NONE_TOK = 35;
    static readonly UNIV_TOK = 36;
    static readonly IDEN_TOK = 37;
    static readonly MINUS_TOK = 38;
    static readonly IS_TOK = 39;
    static readonly SAT_TOK = 40;
    static readonly UNSAT_TOK = 41;
    static readonly THEOREM_TOK = 42;
    static readonly FORGE_ERROR_TOK = 43;
    static readonly CHECKED_TOK = 44;
    static readonly TEST_TOK = 45;
    static readonly EXPECT_TOK = 46;
    static readonly SUITE_TOK = 47;
    static readonly BAR_TOK = 48;
    static readonly ALL_TOK = 49;
    static readonly SUFFICIENT_TOK = 50;
    static readonly NECESSARY_TOK = 51;
    static readonly CONSISTENT_TOK = 52;
    static readonly INCONSISTENT_TOK = 53;
    static readonly WITH_TOK = 54;
    static readonly LET_TOK = 55;
    static readonly BIND_TOK = 56;
    static readonly OR_TOK = 57;
    static readonly XOR_TOK = 58;
    static readonly IFF_TOK = 59;
    static readonly IMP_TOK = 60;
    static readonly ELSE_TOK = 61;
    static readonly AND_TOK = 62;
    static readonly UNTIL_TOK = 63;
    static readonly RELEASE_TOK = 64;
    static readonly SINCE_TOK = 65;
    static readonly TRIGGERED_TOK = 66;
    static readonly NEG_TOK = 67;
    static readonly ALWAYS_TOK = 68;
    static readonly EVENTUALLY_TOK = 69;
    static readonly AFTER_TOK = 70;
    static readonly BEFORE_TOK = 71;
    static readonly ONCE_TOK = 72;
    static readonly HISTORICALLY_TOK = 73;
    static readonly CARD_TOK = 74;
    static readonly PPLUS_TOK = 75;
    static readonly AMP_TOK = 76;
    static readonly SUBT_TOK = 77;
    static readonly SUPT_TOK = 78;
    static readonly PRIME_TOK = 79;
    static readonly TILDE_TOK = 80;
    static readonly EXP_TOK = 81;
    static readonly STAR_TOK = 82;
    static readonly AT_TOK = 83;
    static readonly BACKQUOTE_TOK = 84;
    static readonly THIS_TOK = 85;
    static readonly SEXPR_TOK = 86;
    static readonly INST_TOK = 87;
    static readonly EVAL_TOK = 88;
    static readonly EXAMPLE_TOK = 89;
    static readonly ARROW_TOK = 90;
    static readonly EQ_TOK = 91;
    static readonly LT_TOK = 92;
    static readonly GT_TOK = 93;
    static readonly LEQ_TOK = 94;
    static readonly GEQ_TOK = 95;
    static readonly NI_TOK = 96;
    static readonly NO_TOK = 97;
    static readonly SUM_TOK = 98;
    static readonly INT_TOK = 99;
    static readonly OPTION_TOK = 100;
    static readonly COMMA_TOK = 101;
    static readonly SLASH_TOK = 102;
    static readonly NUM_CONST_TOK = 103;
    static readonly IDENTIFIER_TOK = 104;
    static readonly WS = 105;
    static readonly CCOMMENT = 106;
    static readonly COMMENT = 107;
    static readonly MULTCOMMENT = 108;
    static readonly LANG_DECL = 109;
    static readonly channelNames: string[];
    static readonly modeNames: string[];
    static readonly ruleNames: string[];
    private static readonly _LITERAL_NAMES;
    private static readonly _SYMBOLIC_NAMES;
    static readonly VOCABULARY: Vocabulary;
    get vocabulary(): Vocabulary;
    constructor(input: CharStream);
    get grammarFileName(): string;
    get ruleNames(): string[];
    get serializedATN(): string;
    get channelNames(): string[];
    get modeNames(): string[];
    private static readonly _serializedATNSegments;
    private static readonly _serializedATNSegment0;
    private static readonly _serializedATNSegment1;
    static readonly _serializedATN: string;
    static __ATN: ATN;
    static get _ATN(): ATN;
}
